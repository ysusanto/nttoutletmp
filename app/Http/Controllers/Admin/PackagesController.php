<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-07-31 14:00:40              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Package; use App\Services\PackageInstaller; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Cache; use Illuminate\Support\Facades\Artisan; use Carbon\Carbon; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\x61\x64\155\151\x6e\x2e\160\x61\143\x6b\x61\x67\x65\x73\56\x69\x6e\144\x65\170", compact("\151\156\x73\x74\141\154\x6c\141\x62\154\x65\163", "\x69\156\x73\164\x61\x6c\154\x73")); } public function upload() { return view("\x61\144\x6d\151\x6e\x2e\160\x61\143\x6b\141\x67\145\163\56\x5f\165\x70\154\x6f\x61\x64"); } public function save(Request $request) { echo "\74\x70\x72\x65\76"; print_r($request->all()); echo "\x3c\160\x72\x65\x3e"; exit("\145\x6e\x64\41"); } public function initiate(Request $request, $package) { if (!(config("\x61\x70\x70\x2e\144\145\x6d\157") == true && config("\x61\x70\160\56\144\145\x62\165\147") !== true)) { goto Kru0Q; } return back()->with("\x77\141\x72\x6e\151\156\147", trans("\x6d\x65\x73\x73\141\x67\x65\163\56\144\145\x6d\157\137\162\145\x73\x74\162\151\x63\x74\x69\157\156")); Kru0Q: $installable = $this->scanPackages($package); if (!$installable) { goto myqOT; } if (!Package::where("\163\154\165\x67", $installable["\163\x6c\x75\x67"])->first()) { goto aXomJ; } return back()->with("\145\x72\162\x6f\162", trans("\x6d\145\163\163\x61\x67\145\x73\56\x70\141\143\x6b\x61\x67\145\x5f\151\x6e\x73\164\141\x6c\x6c\145\144\x5f\141\154\x72\145\141\x64\x79", ["\x70\141\143\x6b\141\x67\145" => $package])); aXomJ: myqOT: return view("\141\144\x6d\151\156\x2e\160\x61\143\x6b\141\147\145\163\x2e\137\x69\156\x69\x74\151\141\x74\x65", compact("\x69\x6e\x73\x74\141\x6c\154\141\142\154\x65")); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\141\160\160\56\144\x65\155\x6f") == true && config("\141\x70\160\56\x64\145\142\165\x67") !== true)) { goto sQvfL; } return back()->with("\167\x61\162\x6e\x69\156\147", trans("\x6d\145\163\x73\x61\x67\x65\x73\x2e\144\x65\x6d\157\137\162\145\163\164\162\x69\x63\164\151\x6f\156")); sQvfL: $installable = $this->scanPackages($package); if (!$installable) { goto BGQSY; } DB::beginTransaction(); try { $installer = new PackageInstaller($request, $installable); if (!$installer->install()) { goto GqiNZ; } DB::commit(); Artisan::call("\x63\141\x63\x68\145\x3a\143\x6c\x65\x61\162"); $msg = trans("\x6d\x65\163\163\141\147\145\x73\x2e\160\x61\x63\x6b\141\x67\x65\x5f\x69\156\x73\164\141\x6c\x6c\145\x64\x5f\163\165\x63\x63\x65\163\x73", ["\x70\x61\143\153\141\x67\x65" => $package]); return back()->with("\163\x75\x63\143\145\163\163", $msg); GqiNZ: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\x65\x72\162\157\162", $e->getMessage()); } BGQSY: return back()->with("\145\162\x72\x6f\162", trans("\155\x65\163\x73\x61\x67\x65\x73\x2e\146\x61\151\154\145\x64")); } public function uninstall(Request $request, $package) { if (!(config("\x61\160\x70\56\144\145\x6d\157") == true && config("\141\160\x70\56\x64\145\142\x75\x67") !== true)) { goto KO_A_; } return back()->with("\167\x61\162\x6e\x69\156\x67", trans("\x6d\145\163\x73\x61\x67\x65\163\56\x64\x65\x6d\157\x5f\162\145\x73\x74\162\x69\x63\x74\151\157\x6e")); KO_A_: $registered = Package::where("\163\x6c\x75\x67", $package)->firstOrFail(); DB::beginTransaction(); try { $installer = new PackageInstaller($request, $registered->toArray()); if (!$installer->uninstall()) { goto NJYes; } Artisan::call("\x63\141\x63\150\x65\72\x63\x6c\x65\141\x72"); DB::commit(); if (!$registered->delete()) { goto TDRS5; } $msg = trans("\155\x65\163\163\141\x67\145\163\56\160\x61\143\x6b\141\x67\145\x5f\165\156\151\x6e\x73\x74\x61\154\x6c\x65\144\x5f\x73\165\143\143\145\x73\163", ["\160\x61\x63\153\141\x67\145" => $package]); return back()->with("\163\165\143\143\x65\x73\x73", $msg); TDRS5: NJYes: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\145\x72\x72\x6f\x72", $e->getMessage()); } return back()->with("\x65\x72\162\x6f\162", trans("\x6d\x65\x73\x73\141\x67\x65\163\56\146\x61\151\154\x65\x64")); } public function activation(Request $request, $package) { if (!(config("\x61\x70\160\56\x64\145\155\x6f") == true && config("\141\160\160\x2e\144\145\142\165\147") !== true)) { goto qc4Xx; } return response("\x65\x72\162\x6f\162", 444); qc4Xx: if (!($registered = Package::where("\x73\154\165\147", $package)->first())) { goto Gh5k8; } $registered->active = !$registered->active; $registered->save(); Artisan::call("\143\x61\x63\150\145\x3a\143\154\145\141\x72"); return response("\163\x75\x63\x63\145\163\163", 200); Gh5k8: $unregistered = $this->scanPackages($package); \Log::info($unregistered); if (!$unregistered) { goto A4wRr; } $registered = Package::create($unregistered); A4wRr: return response("\x73\165\143\x63\x65\163\163", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto Gkpwq; } Artisan::call("\x63\141\143\x68\145\72\143\154\x65\x61\x72"); return back()->with("\x73\x75\x63\143\145\163\163", trans("\x6d\145\x73\x73\141\147\x65\163\x2e\160\x61\x63\x6b\141\x67\145\x5f\x73\x65\x74\164\x69\x6e\147\x73\137\x75\160\144\141\164\x65\144")); Gkpwq: return back()->with("\145\x72\162\157\162", trans("\x6d\145\163\163\x61\x67\x65\x73\56\x66\x61\x69\x6c\145\144")); } public function toggleConfig(Request $request, $option) { if (!(config("\x61\160\160\x2e\x64\145\155\157") == true && config("\x61\160\x70\56\144\x65\142\x75\x67") !== true)) { goto zqunx; } return response("\145\162\x72\157\162", 444); zqunx: if (!DB::table("\x6f\x70\x74\151\x6f\x6e\163")->where("\157\x70\x74\x69\x6f\x6e\137\x6e\141\155\145", $option)->update(["\157\160\164\x69\157\x6e\x5f\x76\141\x6c\165\145" => DB::raw("\116\117\124\x20\157\x70\164\x69\x6f\156\137\166\141\154\165\x65")])) { goto Mtuc4; } Artisan::call("\143\141\143\150\145\x3a\x63\x6c\x65\x61\x72"); return response("\163\x75\x63\x63\145\163\x73", 200); Mtuc4: return response("\145\x72\162\x6f\162", 405); } private function scanPackages($slug = Null) { $packages = []; foreach (glob(base_path("\x70\x61\143\153\141\147\145\x73\x2f\52"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\57\155\141\x6e\151\146\x65\x73\164\x2e\152\163\x6f\x6e")) { goto pHlR6; } $json = file_get_contents($manifest); if (!($json !== '')) { goto W2bil; } $data = json_decode($json, true); if (!($data === null)) { goto GHe9u; } throw new \Exception("\x49\156\x76\141\154\151\x64\x20\x6d\141\156\x69\146\x65\x73\164\x2e\152\163\157\156\40\146\x69\x6c\x65\40\141\x74\x20\133{$dir}\135"); GHe9u: if (!($slug && $data["\163\154\165\147"] == $slug)) { goto Eq2CZ; } return $data; Eq2CZ: $packages[] = $data; W2bil: pHlR6: HKiHw: } RmC4Q: return $packages; } }