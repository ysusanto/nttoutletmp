<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-07-31 13:59:49              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Routing\Controller; class ActivateController extends Controller { public function activate() { if ($this->checkDatabaseConnection()) { goto OOIDV; } return redirect()->back()->withErrors(["\x64\141\x74\141\142\141\163\x65\x5f\143\x6f\156\156\145\x63\164\x69\x6f\156" => trans("\x69\156\163\x74\x61\154\154\x65\162\x5f\x6d\145\x73\163\x61\x67\x65\x73\56\x65\156\x76\x69\x72\157\156\155\x65\x6e\x74\x2e\167\x69\172\141\x72\144\56\x66\x6f\162\x6d\56\144\x62\137\143\157\x6e\156\145\x63\x74\151\157\x6e\x5f\x66\141\151\x6c\145\x64")]); OOIDV: return view("\151\156\x73\164\141\154\x6c\145\x72\56\141\143\x74\151\x76\141\x74\x65"); } public function verify(Request $request) { $mysqli_connection = getMysqliConnection(); if ($mysqli_connection) { goto S52QG; } return redirect()->route("\x49\156\x73\x74\141\154\154\x65\x72\x2e\x61\x63\164\151\166\141\x74\x65")->with(["\x66\x61\x69\154\145\144" => trans("\x72\x65\163\x70\x6f\x6e\x73\145\x73\56\144\141\x74\x61\142\x61\163\145\137\143\157\156\156\x65\x63\164\151\157\156\x5f\x66\x61\151\x6c\x65\144")])->withInput($request->all()); S52QG: $purchase_verification = aplVerifyEnvatoPurchase($request->purchase_code); if (empty($purchase_verification)) { goto w5Xnr; } return redirect()->route("\111\156\163\164\x61\154\x6c\x65\x72\x2e\141\143\x74\x69\x76\141\164\x65")->with(["\146\x61\151\x6c\x65\x64" => "\103\157\156\156\145\x63\164\x69\x6f\x6e" . "\40\x74\157\x20\x72\145\155\x6f\x74\x65\x20" . "\163\x65\162\x76\x65\x72\40\x63\141\x6e\47\x74\x20\142\x65" . "\x20\x65\x73\x74\x61\x62\x6c\x69\163\x68\145\144"])->withInput($request->all()); w5Xnr: $license_notifications_array = incevioVerify($request->root_url, $request->email_address, $request->purchase_code, $mysqli_connection); if (!($license_notifications_array["\156\157\164\151\x66\x69\x63\x61\164\151\157\x6e\137\143\141\163\x65"] == "\x6e\x6f\x74\x69\146\151\143\x61\x74\151\157\x6e\137\154\x69\143\x65\x6e\163\145\137\157\153")) { goto ooZrL; } return view("\x69\156\163\x74\x61\154\154\145\x72\x2e\151\x6e\163\164\141\x6c\154", compact("\x6c\x69\143\145\x6e\163\145\x5f\x6e\x6f\164\151\x66\151\x63\141\164\x69\157\156\163\x5f\141\162\x72\x61\x79")); ooZrL: if (!($license_notifications_array["\x6e\x6f\x74\x69\x66\x69\143\141\164\x69\x6f\156\x5f\x63\141\163\145"] == "\x6e\157\164\151\x66\151\x63\x61\x74\x69\x6f\156\x5f\x61\154\162\145\x61\x64\x79\137\x69\x6e\163\x74\141\154\154\145\144")) { goto tKbqT; } $license_notifications_array = incevioAutoloadHelpers($mysqli_connection, 1); if (!($license_notifications_array["\156\x6f\164\151\146\x69\x63\x61\x74\x69\x6f\x6e\x5f\x63\141\163\x65"] == "\156\x6f\164\151\146\x69\x63\x61\x74\151\x6f\x6e\137\154\151\143\145\156\163\x65\137\157\x6b")) { goto mWkkj; } return view("\151\x6e\x73\x74\141\x6c\x6c\145\x72\56\x69\156\x73\164\x61\154\x6c", compact("\x6c\151\x63\145\156\163\x65\137\x6e\x6f\x74\151\146\151\143\x61\164\151\157\156\x73\x5f\x61\162\162\x61\x79")); mWkkj: tKbqT: return redirect()->route("\111\x6e\x73\x74\x61\x6c\154\x65\x72\x2e\x61\143\x74\151\166\141\x74\145")->with(["\146\x61\x69\154\x65\144" => $license_notifications_array["\156\x6f\164\151\146\x69\143\x61\x74\x69\157\156\x5f\164\x65\x78\164"]])->withInput($request->all()); } private function checkDatabaseConnection() { try { DB::connection()->getPdo(); return true; } catch (Exception $e) { return false; } } private function response($message, $status = "\144\141\x6e\x67\x65\x72") { return ["\163\164\x61\x74\165\163" => $status, "\155\x65\163\163\x61\x67\x65" => $message]; } }
